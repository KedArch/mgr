---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ component }}"
  labels:
    component: "{{ component }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: "{{ component }}"
  template:
    metadata:
      labels:
        component: "{{ component }}"
    spec:
      {% if affinity is defined -%}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "node-role.kubernetes.io/{{ affinity }}"
                operator: Exists
      {% endif %}

      containers:
        - name: "{{ component }}"
          image: "{{ host_internal_ip }}:5000/{{ manifests_repo }}/{{ component }}:latest"
          imagePullPolicy: Always
          
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
          
          {% if cmd is defined -%}
          command: ["{{ cmd }}"]
          {% endif %}
          
          ports:
            {% for port in ports -%}
            - containerPort: {{ port.number }}
            {% endfor %}

            {% if nodeports is defined -%}
            {% for port in nodeports -%}
            - containerPort: {{ port.number }}
            {% endfor %}
            {% endif %}

          {% if env is defined -%}
          env:
            {% for name, value in env.items() -%}
            - name: "{{ name }}"
              value: "{{ value }}"
            {% endfor %}
          {% endif %}

          {% if volumes is defined -%}
          volumeMounts:
            {% for volume in volumes -%}
            - mountPath: "{{ volume.dest }}"
              name: "{{ volume.name }}"
            {% endfor %}
          {% endif %}

      {% if volumes is defined -%}
      volumes:
        {% for volume in volumes -%}
        - name: "{{ volume.name }}"
          hostPath:
            path: "{{ volume.host }}"
            type: File
        {% endfor %}
      {% endif %}

{% for port in ports -%}
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ component }}-{{ port.name | lower }}-service"
spec:
  type: ClusterIP
  selector:
    component: "{{ component }}"
  ports:
    - name: "{{ port.name | lower }}"
      protocol: "{{ port.type }}"
      port: {{ port.number }}
      targetPort: {{ port.number }}
{% endfor %}

{% if nodeports is defined %}
{% for port in nodeports -%}
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ component }}-{{ port.name | lower }}-node-service"
spec:
  type: NodePort
  selector:
    component: "{{ component }}"
  ports:
    - name: "{{ port.name | lower }}"
      protocol: "{{ port.type }}"
      port: {{ port.number }}
      targetPort: {{ port.number }}
      nodePort: {{ port.number }}
{% endfor %}
{% endif %}
