job "{{ component }}" {
  datacenters = ["mgr"]
  type = "service"

  group "{{ component }}-group" {
    count = 1

    {% if affinity exists %}
    constraint {
      attribute = "region"
      operator  = "equals"
      value     = "{{ affinity }}"
    }
    {% endif %}
    
    network {
      mode = "bridge"
      {% if ports is defined %}
      {% for port in ports %}
      port "${port.number}" {
        to = ${port.number}
      }
      {% endfor %}
      {% endif %}
      {% if nodeports is defined %}
      {% for port in nodeports %}
      port "nodeport-${port.number}" {
        static = ${port.number}
        to = ${port.to}
      }
      {% endfor %}
      {% endif %}
    }

    {% if init exists %}
    task "{{ component }}-init" {
      driver = "docker"
      config {
        image = "{{ host_internal_ip }}:5000/{{ manifests_repo }}/{{ component }}:latest"
        force_pull = true
        command = "{{ init }}"
      }

      env {
        {% if env exists %}
        {% for name, value in env %}
        "{{ name }}" = "{{ value }}"
        {% endfor %}
        {% endif %}
      }

      volume_mount {
        {% if volumes is defined %}
        {% for volume in volumes %}
        {% if volume.where is not defined or volume.where == "init" %}
        volume      = "{{ volume.name }}"
        destination = "{{ volume.dest }}"
        {% endif %}
        {% endfor %}
        {% endif %}
      }
    }
    {% endif %}

    task "{{ component }}" {
      driver = "docker"
      config {
        image = "{{ host_internal_ip }}:5000/{{ component }}:latest"
        force_pull = true
        ports = [
          {% if ports is defined %}
          {% for port in ports %}
          "${port.number}",
          {% endfor %}
          {% endif %}
          {% if nodeports is defined %}
          {% for port in nodeports %}
          "nodeport-${port.number}",
          {% endfor %}
          {% endif %}
        ]
      }

      volume_mount {
        {% if volumes is defined %}
        {% for volume in volumes %}
        {% if volume.where is not defined or volume.where == "main" %}
        volume      = "{{ volume.name }}"
        destination = "{{ volume.dest }}"
        {% endif %}
        {% endfor %}
        {% endif %}
      }
    }

    # Define volumes
    {% if volumes is defined %}
    {% for volume in volumes %}
    volume "{{ volume.name }}" {
      type = "host"
      source = "{{ volume.host }}"
    }
    {% endfor %}
    {% endif %}

    {% for port in ports %}
    service {
      name = "{{ component }}-service-${port.number}"
      tags = ["clusterip", "internal"]
      port = "${port.number}"
      check {
        type     = "{{ port.type | default('tcp') }}"
        port     = "${port.number}"
        interval = "10s"
        timeout  = "2s"
      }
    }
    {% endfor %}

    {% if nodeports is defined %}
    {% for port in nodeports %}
    service {
      name = "{{ component }}-node-service-${port.number}"
      tags = ["nodeport", "external"]
      port = "nodeport-${port.number}"
      check {
        type     = "{{ port.type | default('tcp') }}"
        port     = "nodeport-${port.number}"
        interval = "10s"
        timeout  = "2s"
      }
    }
    {% endfor %}
    {% endif %}
  }
}
